id: os_sshd_client_alive_interval_configure
title: $OS_VALUE
discussion: $OS_VALUE
check: $OS_VALUE
result: 1
fix: $OS_VALUE
references:
  disa:
    cci:
      - CCI-001133
    srg:
      - $OS_VALUE
    disa_stig:
      - $OS_VALUE
    sfr:
      - $OS_VALUE
  nist:
    cce:
      - $OS_VALUE
    800-53r5:
      - SC-10
      - AC-12
    800-53r4:
      - SC-10
    800-171r2:
      - 3.13.9
odv:
  hint: Number of seconds.
  recommended: 900
  stig: 900
tags:
  - 800-53r5_moderate
  - 800-53r5_high
  - 800-53r4_moderate
  - 800-53r4_high
  - 800-171
  - stig
severity: medium
mobileconfig: false
mobileconfig_info: null
os_specifics:
  macOS:
    '11.0':
      references:
        disa:
          disa_stig:
            - APPL-11-000051
          srg:
            - SRG-OS-000163-GPOS-00072
          sfr:
            - N/A
        nist:
          cce:
            - CCE-85457-0
      discussion: "If SSHD is enabled then it _MUST_ be configured with an Active Client Alive Maximum Count set to $ODV. \n\nSetting the Active Client Alive Maximum Count to $ODV (second) will log users out after an organizational defined interval of inactivity.\n\nNOTE: /etc/ssh/sshd_config will be automatically modified to its original state following any update or major upgrade to the operating system.\n"
      title: Configure SSHD ClientAliveInterval option set to $ODV
      check: |
        /usr/bin/grep -c "^ClientAliveInterval $ODV" /etc/ssh/sshd_config
      fix: |
        [source,bash]
        ----
        /usr/bin/sed -i.bak 's/.*ClientAliveInterval.*/ClientAliveInterval $ODV/' /etc/ssh/sshd_config; /bin/launchctl kickstart -k system/com.openssh.sshd
        ----
    '10.15':
      references:
        disa:
          disa_stig:
            - AOSX-15-000051
          srg:
            - SRG-OS-000163-GPOS-00072
          sfr:
            - N/A
        nist:
          cce:
            - CCE-84793-9
      discussion: "If SSHD is enabled then it _MUST_ be configured with an Active Client Alive Maximum Count set to $ODV. \n\nSetting the Active Client Alive Maximum Count to $ODV  (second) will log users out after a 15-minute interval of inactivity.\n\nNOTE: /etc/ssh/sshd_config will be automatically modified to its original state following any update or major upgrade to the operating system.\n"
      title: Configure SSHD ClientAliveInterval option set to $ODV
      check: |
        /usr/bin/grep -c "^ClientAliveInterval $ODV " /etc/ssh/sshd_config
      fix: |
        [source,bash]
        ----
        /usr/bin/sed -i.bak 's/.*ClientAliveInterval.*/ClientAliveInterval $ODV /' /etc/ssh/sshd_config; /bin/launchctl kickstart -k system/com.openssh.sshd
        ----
    '12.0':
      references:
        disa:
          disa_stig:
            - APPL-12-000051
          srg:
            - SRG-OS-000163-GPOS-00072
          sfr:
            - N/A
        nist:
          cce:
            - CCE-91008-3
      discussion: "If SSHD is enabled then it _MUST_ be configured with the Client Alive Interval set to $ODV. \n\nSets a timeout interval in seconds after which if no data has been received from the client, sshd(8) will send a message through the encrypted channel to request a response from the client.\n\nThis setting works in conjuction with ClientAliveCountMax to determine the termination of the connection after the threshold has been reached.\n\nNOTE: This setting is not intended to manage idle user sessions where there is no input from the client. Its purpose is to monitor for interruptions in network connectivity and force the session to terminate after the connection appears to be broken.\n\nNOTE: /etc/ssh/sshd_config will be automatically modified to its original state following any update or major upgrade to the operating system.\n"
      title: Configure SSHD ClientAliveInterval to $ODV
      check: |
        /usr/sbin/sshd -T | /usr/bin/awk '/clientaliveinterval/{print $2}'
      fix: |
        [source,bash]
        ----
        include_dir=$(/usr/bin/awk '/^Include/ {print $2}' /etc/ssh/sshd_config | /usr/bin/tr -d '*')

        if [[ -z $include_dir ]]; then
          /usr/bin/sed -i.bk "1s/.*/Include \/etc\/ssh\/sshd_config.d\/\*/" /etc/ssh/sshd_config
        fi

        echo "clientaliveinterval $ODV" >> "${include_dir}01-mscp-sshd.conf"

        for file in $(ls ${include_dir}); do
          if [[ "$file" == "100-macos.conf" ]]; then
              continue
          fi
          if [[ "$file" == "01-mscp-sshd.conf" ]]; then
              break
          fi
          /bin/mv ${include_dir}${file} ${include_dir}20-${file}
        done
        ----
    '13.0':
      references:
        disa:
          disa_stig:
            - N/A
          srg:
            - N/A
          sfr:
            - N/A
        nist:
          cce:
            - CCE-91887-0
      discussion: "If SSHD is enabled then it _MUST_ be configured with the Client Alive Interval set to $ODV. \n\nSets a timeout interval in seconds after which if no data has been received from the client, sshd(8) will send a message through the encrypted channel to request a response from the client.\n\nThis setting works in conjuction with ClientAliveCountMax to determine the termination of the connection after the threshold has been reached.\n\nNOTE: This setting is not intended to manage idle user sessions where there is no input from the client. Its purpose is to monitor for interruptions in network connectivity and force the session to terminate after the connection appears to be broken.\n\nNOTE: /etc/ssh/sshd_config will be automatically modified to its original state following any update or major upgrade to the operating system.\n"
      title: Configure SSHD ClientAliveInterval to $ODV
      check: |
        /usr/sbin/sshd -T | /usr/bin/awk '/clientaliveinterval/{print $2}'
      fix: |
        [source,bash]
        ----
        include_dir=$(/usr/bin/awk '/^Include/ {print $2}' /etc/ssh/sshd_config | /usr/bin/tr -d '*')

        if [[ -z $include_dir ]]; then
          /usr/bin/sed -i.bk "1s/.*/Include \/etc\/ssh\/sshd_config.d\/\*/" /etc/ssh/sshd_config
        fi

        echo "clientaliveinterval $ODV" >> "${include_dir}01-mscp-sshd.conf"

        for file in $(ls ${include_dir}); do
          if [[ "$file" == "100-macos.conf" ]]; then
              continue
          fi
          if [[ "$file" == "01-mscp-sshd.conf" ]]; then
              break
          fi
          /bin/mv ${include_dir}${file} ${include_dir}20-${file}
        done
        ----
