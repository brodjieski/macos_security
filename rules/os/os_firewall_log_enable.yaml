id: os_firewall_log_enable
title: Enable Firewall Logging
discussion: $OS_VALUE
check: $OS_VALUE
result:
  integer: 1
fix: $OS_VALUE
references:
  cce:
    - $OS_VALUE
  cci:
    - N/A
  800-53r5:
    - AU-12
    - SC-7
  800-53r4:
    - SC-7
    - AU-12
  srg:
    - $OS_VALUE
  disa_stig:
    - $OS_VALUE
  800-171r2:
    - 3.3.1
    - 3.3.2
    - 3.13.1
    - 3.13.2
    - 3.13.5
  cis:
    benchmark:
      - $OS_VALUE
    controls v8:
      - $OS_VALUE
tags:
  - 800-53r5_low
  - 800-53r5_moderate
  - 800-53r5_high
  - 800-53r4_low
  - 800-53r4_moderate
  - 800-53r4_high
  - 800-171
  - cisv8
  - cis_lvl1
  - cis_lvl2
mobileconfig: false
mobileconfig_info: null
os_specifics:
  macOS:
    '11.0':
      references:
        cce:
          - CCE-85313-5
        disa_stig:
          - N/A
        srg:
          - N/A
        cis:
          benchmark:
            - 3.6 (level 1)
          controls v8:
            - 4.5
            - 8.2
            - 8.5
      discussion: "Firewall logging _MUST_ be enabled. \n\nFirewall logging ensures that malicious network activity will be logged to the system. \n\nNOTE: The firewall data is logged to Apple's Unified Logging with the subsystem com.apple.alf and the data is marked as private.\n"
      check: |
        /usr/libexec/ApplicationFirewall/socketfilterfw --getloggingmode | /usr/bin/grep -c "Log mode is on"
      fix: |
        [source,bash]
        ----
        /usr/libexec/ApplicationFirewall/socketfilterfw --setloggingmode on
        ----
    '12.0':
      references:
        cce:
          - CCE-90924-2
        disa_stig:
          - N/A
        srg:
          - N/A
        cis:
          benchmark:
            - 3.6 (level 1)
          controls v8:
            - 4.5
            - 8.2
            - 8.5
      discussion: "Firewall logging _MUST_ be enabled. \n\nFirewall logging ensures that malicious network activity will be logged to the system. \n\nNOTE: The firewall data is logged to Apple's Unified Logging with the subsystem `com.apple.alf` and the data is marked as private. In order to enable private data, review the `com.apple.alf.private_data.mobileconfig` file in the project's `includes` folder. \n"
      check: |
        /usr/bin/osascript -l JavaScript << EOS
        function run() {
          let pref1 = $.NSUserDefaults.alloc.initWithSuiteName('com.apple.security.firewall')\
          .objectForKey('EnableLogging').js
          let pref2 = $.NSUserDefaults.alloc.initWithSuiteName('com.apple.security.firewall')\
          .objectForKey('LoggingOption').js
          if ( pref1 == true && pref2 == "detail" ){
            return("true")
          } else {
            return("false")
          }
        }
        EOS
      fix: |
        This is implemented by a Configuration Profile.
    '13.0':
      references:
        cce:
          - CCE-91791-4
        disa_stig:
          - N/A
        srg:
          - N/A
        cis:
          benchmark:
            - 3.6 (level 1)
          controls v8:
            - 4.5
            - 8.2
            - 8.5
      discussion: "Firewall logging _MUST_ be enabled. \n\nFirewall logging ensures that malicious network activity will be logged to the system. \n\nNOTE: The firewall data is logged to Apple's Unified Logging with the subsystem `com.apple.alf` and the data is marked as private. In order to enable private data, review the `com.apple.alf.private_data.mobileconfig` file in the project's `includes` folder. \n"
      check: |
        /usr/bin/osascript -l JavaScript << EOS
        function run() {
          let pref1 = $.NSUserDefaults.alloc.initWithSuiteName('com.apple.security.firewall')\
          .objectForKey('EnableLogging').js
          let pref2 = $.NSUserDefaults.alloc.initWithSuiteName('com.apple.security.firewall')\
          .objectForKey('LoggingOption').js
          if ( pref1 == true && pref2 == "detail" ){
            return("true")
          } else {
            return("false")
          }
        }
        EOS
      fix: |
        This is implemented by a Configuration Profile.
